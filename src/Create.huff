 
/** 
 *  CREATE HUFF EXERCISE
 *  
 *  The task is to deploy this contract with a function `makeContract()` which when called creates a contract
 *  that when called with any data returns `0xcaffe`.
 *  The call to `makeContract` should return the address of the newly created contract.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function makeContract() payable returns(address)

/**
*   The new Contract's code like 
    #define macro MAIN() = takes(0) returns(0) {
    0xcaffe
    returndatasize mstore

    0x20 returndatasize return
}
  stored in ./Contract.huff
*/

 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr

    __FUNC_SIG(makeContract) eq makeContract jumpi
    0x00 0x00 revert

    makeContract:
        0x600a8060093d393df3620caffe3d5260203df3 // 19 bytes leftpad with 0
        0x00 mstore // so we can't get all bytes of this 32 bytes.  The position of start should be the position of '60', so the start offset is 32 - 19 = 13 bytes(0x0d)

        0x13 0x0d 0x00 create // [0, 0x0d(offset), 0x13(length)] => [address]
        0x00 mstore

        0x20 push0 return

 }